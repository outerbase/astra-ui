---
import TableOfContents from './TableOfContents.astro'

interface Props {
  title: string
}

const { title } = Astro.props

const instructions = [
  {
    label: 'Introduction',
    href: '/',
  },
  {
    label: 'Installation',
    href: '/install',
  },
  {
    label: 'Theming',
    href: '/theme',
  },
  {
    label: 'Changes',
    href: '/changes',
  },
]
const components = [
  {
    label: 'Button',
    href: '/components/button',
  },
  {
    label: 'Card',
    href: '/components/card',
  },
  {
    label: 'Input',
    href: '/components/input',
  },
  {
    label: 'Text',
    href: '/components/text',
  },
  {
    label: 'Scroll Area',
    href: '/components/scroll-area',
  },
  // {
  //   label: 'Code Editor',
  //   href: '/components/code-editor',
  // },
  // {
  //   label: 'Code Editor (Javascript)',
  //   href: '/components/code-editor-js',
  // },
  {
    label: 'Charts',
    href: '/components/charts',
  },
  {
    label: 'Select',
    href: '/components/select',
  },
  // {
  //   label: 'Modal',
  //   href: '/components/modal',
  // },
  {
    label: 'Table',
    href: '/components/table',
  },
]
const clickableClasses = 'hover:underline'
---

<!doctype html>
<html lang="en" class="h-screen cursor-default">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script>
      function setActiveLinkStyle(isDarkMode: boolean) {
        const element = document.getElementById(window.location.pathname)
        if (element) element.style.color = isDarkMode ? 'black' : 'white'
      }

      document.addEventListener('DOMContentLoaded', () => {
        const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
        const element = document.getElementById(window.location.pathname)
        if (element) {
          setActiveLinkStyle(isDarkMode)
        }

        const page = document.getElementById('page')
        if (page) {
          page.classList.remove('opacity-0')
          page.classList.add('opacity-100')
        }
      })

      // listen for color scheme changes
      const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)')
      darkMediaQuery.addEventListener('change', (e) => setActiveLinkStyle(e.matches))
    </script>
  </head>
  <body class="h-full">
    <div id="page" class="h-full flex opacity-0 transition-opacity">
      <div
        class="overflow-scroll h-100 select-none w-72 border-r border-neutral-300 dark:border-neutral-700 p-10 flex-col gap-10 flex text-neutral-600 dark:text-neutral-400"
      >
        <a href="/"><img src="/astra-ui.svg" alt="Astra UI" class="w-40" /></a>
        <div class="flex flex-col gap-4">
          <h3 class="text-neutral-900 font-bold dark:text-white">Getting Started</h3>
          <ul class="flex text-neutral-600 flex-col gap-4">
            {
              instructions.map(({ label, href }) => (
                <li id={href} class={clickableClasses}>
                  <a
                    href={href}
                    class={`${Astro.url.pathname === href ? 'font-medium text-neutral-900 dark:text-white' : ''} hover:text-neutral-900`}
                  >
                    {label}
                  </a>
                </li>
              ))
            }
          </ul>
        </div>

        <h3 class="font-bold text-neutral-900 dark:text-white">Components</h3>
        <div class="flex flex-col gap-4">
          <ul class="text-neutral-600 flex flex-col gap-4">
            {
              components.map(({ label, href }) => (
                <li id={href} class={clickableClasses}>
                  <a
                    href={href}
                    class={`${Astro.url.pathname === href ? 'font-medium text-neutral-900 dark:text-white' : ''} hover:text-neutral-900`}
                  >
                    {label}
                  </a>
                </li>
              ))
            }
          </ul>
        </div>
      </div>

      <div class="flex-auto overflow-y-auto relative">
        <div class="flex">
          <div class="flex-grow p-10">
            <div class="max-w-3xl mx-auto">
              <slot />
            </div>
          </div>
          <TableOfContents />
        </div>
      </div>
    </div>
  </body>
</html>
