---
import AstraTable from '../../components/table/core'

import { Code } from 'astro/components'
import ComponentLayout from '../../layouts/Component.astro'
import Layout from '../../layouts/Layout.astro'

const usage = `\
<astra-table schema='{"columns": []}' data='[{}]' />
`

// test data
import spaceballs from '../../lib/sample-data.json'
const rows = spaceballs
  .map((d) => ({ ...d, traits: JSON.stringify(d.traits) }))
  .map((values) => ({ id: crypto.randomUUID(), values, originalValues: values }))
const columns = Object.keys(rows[0].values).map((name) => ({ name }))
---

<style>
  /* wormhole'd things need to be set on the `body` :shrug: */
  #blurred-table {
    --astra-toggle-color-hover: rgba(0, 0, 0, 0.2);
    --astra-toggle-color-active: rgba(0, 0, 0, 0.7);

    --astra-menu-background-color: black;
    --astra-menu-content-color: white;
    --astra-menu-content-color-active: black;
    --astra-menu-background-color-active: white;

    --astra-table-content-color: rgb(255, 255, 255);
    --astra-table-border-color: rgba(255, 255, 255, 0.1);
    --astra-table-column-header-background-color: rgba(0, 0, 0, 0.2);
    --astra-table-column-header-background-color-dark: rgba(0, 0, 0, 0.5);
    --astra-table-column-header-content-color: rgb(255, 255, 255);
    --astra-table-row-even-background-color: rgba(0, 0, 0, 0.2);
    --astra-table-row-even-background-color-dark: rgba(0, 0, 0, 0.3);
    --astra-table-row-even-background-color: rgba(0, 0, 0, 0.2);
    --astra-table-row-even-background-color-dark: rgba(0, 0, 0, 0.3);
  }
</style>
<Layout title="Astra-UI">
  <ComponentLayout title="Table" summary="This, _that_, and THE other.">
    <!-- @ts-ignore -->

    <div class="dark:bg-black w-full" slot="preview">
      <div class="relative h-52 rounded-md overflow-clip">
        <!-- @ts-ignore Astro doesn't seem to understand some of the params being passed -->
        <AstraTable id="blurred-table" client:load schema={{ columns }} data={rows} blurry static-widths />
      </div>
    </div>

    <!-- // TODO @Brandon pick a `theme` on the next line -->
    <Code slot="usage" code={usage} lang="html" class="p-4 dark:bg-black bg-white" theme="ayu-dark" />
  </ComponentLayout>
</Layout>
